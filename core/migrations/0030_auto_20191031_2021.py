# Generated by Django 2.2.5 on 2019-11-01 03:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0029_auto_20191030_1957'),
    ]

    operations = [
        migrations.AddField(
            model_name='commentreply',
            name='hidden',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='commentreply',
            name='reported_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='comments',
            name='hidden',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='comments',
            name='reported_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='post',
            name='reported_count',
            field=models.IntegerField(default=0),
        ),
        migrations.RemoveField(
            model_name='post',
            name='reported',
        ),
        migrations.CreateModel(
            name='PostViewCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_viewed', models.DateField(auto_now_add=True, null=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Post')),
                ('userprofile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User_Profile')),
            ],
        ),
        migrations.CreateModel(
            name='PostReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reported', models.DateField(auto_now_add=True, null=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Post')),
                ('userprofile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User_Profile')),
            ],
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_liked', models.DateField(auto_now_add=True, null=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Post')),
                ('userprofile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User_Profile')),
            ],
        ),
        migrations.CreateModel(
            name='CommentsReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reported', models.DateField(auto_now_add=True, null=True)),
                ('comments', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Comments')),
                ('userprofile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User_Profile')),
            ],
        ),
        migrations.CreateModel(
            name='CommentsLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_liked', models.DateField(auto_now_add=True, null=True)),
                ('comments', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Comments')),
                ('userprofile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User_Profile')),
            ],
        ),
        migrations.CreateModel(
            name='CommentReplyReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reported', models.DateField(auto_now_add=True, null=True)),
                ('commentreply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.CommentReply')),
                ('userprofile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User_Profile')),
            ],
        ),
        migrations.CreateModel(
            name='CommentReplyLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_liked', models.DateField(auto_now_add=True, null=True)),
                ('commentreply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.CommentReply')),
                ('userprofile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User_Profile')),
            ],
        ),
        migrations.AddField(
            model_name='commentreply',
            name='reported',
            field=models.ManyToManyField(blank=True, related_name='reply_reported', through='core.CommentReplyReport', to='core.User_Profile'),
        ),
        migrations.AddField(
            model_name='commentreply',
            name='user_like',
            field=models.ManyToManyField(blank=True, related_name='reply_user_like', through='core.CommentReplyLike', to='core.User_Profile'),
        ),
        migrations.AddField(
            model_name='comments',
            name='reported',
            field=models.ManyToManyField(blank=True, related_name='comment_reported', through='core.CommentsReport', to='core.User_Profile'),
        ),
        migrations.AddField(
            model_name='comments',
            name='user_like',
            field=models.ManyToManyField(blank=True, related_name='comment_user_like', through='core.CommentsLike', to='core.User_Profile'),
        ),
        migrations.AddField(
            model_name='post',
            name='user_like',
            field=models.ManyToManyField(blank=True, related_name='post_user_like', through='core.PostLike', to='core.User_Profile'),
        ),
        migrations.AddField(
            model_name='post',
            name='user_view',
            field=models.ManyToManyField(blank=True, related_name='post_user_view', through='core.PostViewCount', to='core.User_Profile'),
        ),
        migrations.AddField(
            model_name='post',
            name='reported',
            field=models.ManyToManyField(blank=True, related_name='post_reported', through='core.PostReport', to='core.User_Profile'),
        ),
    ]
