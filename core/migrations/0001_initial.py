# Generated by Django 2.2 on 2019-08-24 21:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dividend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('dividend_amount', models.FloatField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('discount_price', models.FloatField(blank=True, null=True)),
                ('category', models.CharField(choices=[('S', 'Shirt'), ('SW', 'Sport Wear'), ('OW', 'Outwear')], default='S', max_length=2)),
                ('label', models.CharField(choices=[('P', 'primary'), ('S', 'secondary'), ('D', 'danger')], default='P', max_length=1)),
                ('description', models.TextField(default='NOT_PROVIDED')),
                ('slug', models.SlugField(default='dummy-item')),
            ],
        ),
        migrations.CreateModel(
            name='StockInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('date_included', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stocks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to=None)),
                ('fairvale', models.FloatField(blank=True, null=True)),
                ('dividend_yeild', models.FloatField(blank=True, null=True)),
                ('dividend_growth', models.FloatField(blank=True, null=True)),
                ('earning_growth', models.FloatField(blank=True, null=True)),
                ('distrubution', models.CharField(blank=True, choices=[('Q', 'Quarterly'), ('B', 'Bi Yearly')], default='S', max_length=1, null=True)),
                ('months', models.CharField(blank=True, choices=[('J', 'January/April/July/October'), ('F', ' February/May/August/November'), ('M', ' March/June/September/December')], default='S', max_length=1, null=True)),
                ('slug', models.SlugField(default='dummy-stock')),
                ('url', models.URLField(blank=True, null=True)),
                ('dividend', models.ManyToManyField(blank=True, to='core.Dividend')),
            ],
        ),
        migrations.CreateModel(
            name='User_Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to=None)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('dependents', models.IntegerField(blank=True, null=True)),
                ('tax_filing_status', models.CharField(blank=True, choices=[('M', 'Single'), ('J', 'Married Filing Jointly'), ('S', 'Married Filing Separatly'), ('H', 'Head of Household'), ('M', 'Qualifying Widow(er)')], default='J', max_length=1, null=True)),
                ('employment_status', models.CharField(blank=True, choices=[('Employed', (('F', 'Fulltime'), ('P', 'Part-Time'))), ('S', 'Self Employed'), ('T', 'Student'), ('R', 'Retired'), ('H', 'Homemaker'), ('N', 'Not Employed')], default='F', max_length=1, null=True)),
                ('occupation', models.CharField(blank=True, max_length=30, null=True)),
                ('employer', models.CharField(blank=True, max_length=30, null=True)),
                ('Approximate_Annual_Income', models.IntegerField(blank=True, null=True)),
                ('Approximate_Net_Worth', models.IntegerField(blank=True, null=True)),
                ('Brokarage_account', models.CharField(blank=True, choices=[('T', 'TdAmeritrade'), ('M', 'Fidelity Investments'), ('W', 'Wells Fargo Advisors'), ('E', 'Edward Jones'), ('R', 'Raymond James Financial'), ('A', 'AXA Advisors'), ('L', 'LPL Financial'), ('I', 'Ameriprise Financia'), ('V', 'Voya'), ('C', 'Commonwealth Financial Network'), ('N', 'Northwest Mutual Inv. Services'), ('B', 'Cambridge Investment Research'), ('S', 'Securities America'), ('D', 'Waddell & Reed'), ('O', 'Other')], default='S', max_length=1, null=True)),
                ('estimated_investable_assets', models.IntegerField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('sign_up_date', models.DateTimeField(auto_now_add=True)),
                ('estimated_dividend_income_wanted', models.IntegerField(blank=True, null=True)),
                ('current_dividend_income', models.IntegerField(blank=True, null=True)),
                ('stock', models.ManyToManyField(blank=True, through='core.StockInfo', to='core.Stocks')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='stockinfo',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Stocks'),
        ),
        migrations.AddField(
            model_name='stockinfo',
            name='userprofile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User_Profile'),
        ),
        migrations.CreateModel(
            name='RiskProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_tolerance', models.CharField(choices=[(1, 'High'), (2, 'Medium'), (3, 'Low')], default=1, max_length=1)),
                ('What_age_do_you_want_to_retire', models.IntegerField(default=1)),
                ('How_ofen_do_you_check_your_investment_statements', models.CharField(choices=[(1, 'At Least Once a Week'), (2, 'At Least Once a Month'), (3, 'At Least Once a Year')], default=1, max_length=1)),
                ('How_likely_are_you_to_pull_out_of_the_market_assuming_a_market_downturn', models.CharField(choices=[(1, 'At Least Once a Week'), (2, 'At Least Once a Month'), (3, 'At Least Once a Year')], default=1, max_length=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=100)),
                ('quantity', models.IntegerField(default=1)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Item')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('ordered_date', models.DateTimeField()),
                ('ordered', models.BooleanField(default=False)),
                ('items', models.ManyToManyField(to='core.OrderItem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FinancialGoals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('New_investor', models.CharField(blank=True, choices=[(1, 'Yes'), (0, 'No')], default=1, max_length=1, null=True)),
                ('What_are_you_looking_to_acheive_through_investing', models.CharField(blank=True, choices=[(0, 'Having money in case of emergencies'), (1, 'Earing more from savings'), (2, 'I just want to grow my money'), (3, 'Being able to retire comfortably'), (4, 'Becoming a homeowner'), (5, 'Financial Independance'), (5, 'Lifestyle Improvement')], default=3, max_length=1, null=True)),
                ('number_of_income_sources', models.IntegerField(blank=True, null=True)),
                ('How_much_income_after_taxex_do_you_want_yearly', models.IntegerField(blank=True, null=True)),
                ('How_much_dividend_income_do_you_expect_to_need_during_retirment', models.IntegerField(blank=True, null=True)),
                ('What_percentage_of_your_income_do_you_save_a_month', models.IntegerField(blank=True, null=True)),
                ('With_more_money_do_you_expect_enhance_your_lifestyle', models.CharField(blank=True, choices=[(1, 'Yes (Earn More Live More)'), (0, 'No (Earn More, Save More)')], default=1, max_length=1, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
